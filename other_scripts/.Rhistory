options(stringsAsFactors = F)
library(ggtree)
library(ggplot2)
## if installing ggtree doesn't work
#install.packages("tidytree") #it is on CRAN!
## install the main package
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("ggtree")
library(magrittr)
library(tidyr)
library(RColorBrewer)
##install.packages("gridSVG")
library(gridSVG)
gheatmap <- function (p, data, offset = 0, width = 1, low = "green", high = "red",
color = "white", colnames = TRUE, colnames_position = "bottom",
colnames_angle = 0, colnames_level = NULL, colnames_offset_x = 0,
colnames_offset_y = 0, font.size = 4, hjust = 0.5)
{
colnames_position %<>% match.arg(c("bottom", "top"))
variable <- value <- lab <- y <- NULL
width <- width * (p$data$x %>% range(na.rm = TRUE) %>% diff)/ncol(data)
isTip <- x <- y <- variable <- value <- from <- to <- NULL
df <- p$data
df <- df[df$isTip, ]
start <- max(df$x, na.rm = TRUE) + offset
dd <- as.data.frame(data)
i <- order(df$y)
i <- i[!is.na(df$y[i])]
lab <- df$label[i]
dd <- dd[match(lab, rownames(dd)), , drop = FALSE]
dd$y <- sort(df$y)
dd$lab <- lab
dd <- gather(dd, variable, value, -c(lab, y))
i <- which(dd$value == "")
if (length(i) > 0) {
dd$value[i] <- NA
}
if (is.null(colnames_level)) {
dd$variable <- factor(dd$variable, levels = colnames(data))
}
else {
dd$variable <- factor(dd$variable, levels = colnames_level)
}
V2 <- start + as.numeric(dd$variable) * width
mapping <- data.frame(from = dd$variable, to = V2)
mapping <- unique(mapping)
dd$x <- V2
dd$width <- width
dd[[".panel"]] <- factor("Tree")
if (is.null(color)) {
p2 <- p + geom_tile(data = dd, aes(x, y, fill = value),
width = width, inherit.aes = FALSE)
}
else {
p2 <- p + geom_tile(data = dd, aes(x, y, fill = value),
width = width, color = color, height = 0.7, inherit.aes = FALSE)
}
if (is(dd$value, "numeric")) {
p2 <- p2 + scale_fill_gradient(low = low, high = high,
na.value = NA)
}
else {
p2 <- p2 + scale_fill_discrete(na.value = NA)
}
if (colnames) {
if (colnames_position == "bottom") {
y <- 0
}
else {
y <- max(p$data$y) + 1
}
mapping$y <- y
mapping[[".panel"]] <- factor("Tree")
p2 <- p2 + geom_text(data = mapping, aes(x = to, y = y,
label = from), size = font.size, inherit.aes = FALSE,
angle = colnames_angle, nudge_x = colnames_offset_x,
nudge_y = colnames_offset_y, hjust = hjust)
}
p2 <- p2 + theme(legend.position = "right", legend.title = element_blank())
if (!colnames) {
p2 <- p2 + scale_y_continuous(expand = c(0, 0))
}
attr(p2, "mapping") <- mapping
return(p2)
}
#tr <- read.iqtree("data/2.4_Fig2_tree_rnaspades_nt.nwk")
tr <- read.iqtree("data/2.4_FigS2_tree_rnaspades_aa.nwk")
label <- tr@phylo$node.label
alrt <- as.numeric(sub("/.*", "", label))
bigalrt <- alrt > 70 & !is.na(alrt)
##the first number
bayes <- as.numeric(sub(".*/", "", label))
bigbayes <- bayes > 0.7 & !is.na(bayes)
## subset
#newlabel <- ifelse(bigalrt & bigbayes, intToUtf8(9679), "")
newlabel <- ifelse(bigalrt & bigbayes, "red3", "#00000000")
#newlabel <- ifelse(bigalrt & bigbayes, label, "")
tr@phylo$node.label <- newlabel
meta.df <- read.csv("metadata.csv", row.names = 2)[, 2:3]
meta.df <- read.csv("data/2.4_metadata.csv", row.names = 2)[, 2:3]
meta.df[,2] <- as.factor(meta.df[,2])
meta.df[,1] <- as.factor(meta.df[,1])
levels(meta.df[,1]) <- c(levels(meta.df[,1]), 2, 3)
meta.df[,1] <- relevel(meta.df[,1], ref = "0")
levels(meta.df[,2]) <- c(levels(meta.df[,2]), 0)
meta.df[,2] <- relevel(meta.df[,2], ref = "0")
tr@phylo$tip.label <- gsub("_", " ", tr@phylo$tip.label)
row.names(meta.df) <- gsub("_", " ", row.names(meta.df))
ptr <- ggtree(tr) + geom_tiplab(align = T, fontface = "italic", offset = .1, linetype = "dotted", linesize = .2) +   #geom_nodelab(size = 2, nudge_x = -0.003, color="red", nudge_y = 0.2, geom="text")
geom_nodepoint(size = 1, color = newlabel) #+ #, nudge_x = -0.005, nudge_y = -0.3, geom="text")
#  xlim(0, 3)
ptr
ptr3 <- flip(ptr, 67, 64)
#colors <- c("grey100", "grey67", "grey33", "grey0")
colors <- c("#F6F2FF", "#BE95FF", "#6929C4", "#1C0F30")
names(colors) <- c("0", "1", "2", "3")
ptr2 <- gheatmap(p = ptr3, meta.df, color = "black",
width=.12, offset=-0.01, colnames=T, colnames_position = "top",
colnames_offset_y = .5, colnames_offset_x = c(-1/80, 1/80),
colnames_angle = 0, font.size = 3.5) +
scale_fill_manual("dflk", values=colors) +  ##name doesn't work , labels = names(colors) just not necessary
theme(legend.position = c(0.1, 0.8)) +
xlim(0, 1.4) +
annotate("text", x=0.06, y=36, label = "Found opsins") +
annotate("text", x=0.01, y=20.8, label = intToUtf8(9679), col = "red3") +
annotate("text", x=0.12, y=20, label = "aBayes > 0.7 & \n aLRT > 70%")
ptr2
options(stringsAsFactors = F)
library(ggtree)
library(ggplot2)
## if installing ggtree doesn't work
#install.packages("tidytree") #it is on CRAN!
## install the main package
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("ggtree")
library(magrittr)
library(tidyr)
library(RColorBrewer)
##install.packages("gridSVG")
library(gridSVG)
gheatmap <- function (p, data, offset = 0, width = 1, low = "green", high = "red",
color = "white", colnames = TRUE, colnames_position = "bottom",
colnames_angle = 0, colnames_level = NULL, colnames_offset_x = 0,
colnames_offset_y = 0, font.size = 4, hjust = 0.5)
{
colnames_position %<>% match.arg(c("bottom", "top"))
variable <- value <- lab <- y <- NULL
width <- width * (p$data$x %>% range(na.rm = TRUE) %>% diff)/ncol(data)
isTip <- x <- y <- variable <- value <- from <- to <- NULL
df <- p$data
df <- df[df$isTip, ]
start <- max(df$x, na.rm = TRUE) + offset
dd <- as.data.frame(data)
i <- order(df$y)
i <- i[!is.na(df$y[i])]
lab <- df$label[i]
dd <- dd[match(lab, rownames(dd)), , drop = FALSE]
dd$y <- sort(df$y)
dd$lab <- lab
dd <- gather(dd, variable, value, -c(lab, y))
i <- which(dd$value == "")
if (length(i) > 0) {
dd$value[i] <- NA
}
if (is.null(colnames_level)) {
dd$variable <- factor(dd$variable, levels = colnames(data))
}
else {
dd$variable <- factor(dd$variable, levels = colnames_level)
}
V2 <- start + as.numeric(dd$variable) * width
mapping <- data.frame(from = dd$variable, to = V2)
mapping <- unique(mapping)
dd$x <- V2
dd$width <- width
dd[[".panel"]] <- factor("Tree")
if (is.null(color)) {
p2 <- p + geom_tile(data = dd, aes(x, y, fill = value),
width = width, inherit.aes = FALSE)
}
else {
p2 <- p + geom_tile(data = dd, aes(x, y, fill = value),
width = width, color = color, height = 0.7, inherit.aes = FALSE)
}
if (is(dd$value, "numeric")) {
p2 <- p2 + scale_fill_gradient(low = low, high = high,
na.value = NA)
}
else {
p2 <- p2 + scale_fill_discrete(na.value = NA)
}
if (colnames) {
if (colnames_position == "bottom") {
y <- 0
}
else {
y <- max(p$data$y) + 1
}
mapping$y <- y
mapping[[".panel"]] <- factor("Tree")
p2 <- p2 + geom_text(data = mapping, aes(x = to, y = y,
label = from), size = font.size, inherit.aes = FALSE,
angle = colnames_angle, nudge_x = colnames_offset_x,
nudge_y = colnames_offset_y, hjust = hjust)
}
p2 <- p2 + theme(legend.position = "right", legend.title = element_blank())
if (!colnames) {
p2 <- p2 + scale_y_continuous(expand = c(0, 0))
}
attr(p2, "mapping") <- mapping
return(p2)
}
#tr <- read.iqtree("data/2.4_Fig2_tree_rnaspades_nt.nwk")
tr <- read.iqtree("data/2.4_FigS2_tree_rnaspades_aa.nwk")
label <- tr@phylo$node.label
alrt <- as.numeric(sub("/.*", "", label))
bigalrt <- alrt > 70 & !is.na(alrt)
##the first number
bayes <- as.numeric(sub(".*/", "", label))
bigbayes <- bayes > 0.7 & !is.na(bayes)
## subset
#newlabel <- ifelse(bigalrt & bigbayes, intToUtf8(9679), "")
newlabel <- ifelse(bigalrt & bigbayes, "red3", "#00000000")
#newlabel <- ifelse(bigalrt & bigbayes, label, "")
tr@phylo$node.label <- newlabel
#tr@phylo$tip.label <- gsub("_", " ", tr@phylo$tip.label, )
meta.df <- read.csv("data/2.4_metadata.csv", row.names = 2)[, 2:4]
meta.df[,2] <- as.factor(meta.df[,2])
meta.df[,1] <- as.factor(meta.df[,1])
meta.df[,3] <- as.factor(meta.df[,3])
levels(meta.df[,1]) <- c(levels(meta.df[,1]), 2, 3)
meta.df[,1] <- relevel(meta.df[,1], ref = "0")
levels(meta.df[,2]) <- c(levels(meta.df[,2]), 0)
meta.df[,2] <- relevel(meta.df[,2], ref = "0")
levels(meta.df[,3]) <- c(levels(meta.df[,3]), 0)
meta.df[,3] <- relevel(meta.df[,3], ref = "0")
tr@phylo$tip.label <- gsub("_", " ", tr@phylo$tip.label)
row.names(meta.df) <- gsub("_", " ", row.names(meta.df))
ptr <- ggtree(tr) + geom_tiplab(align = T, fontface = "italic", offset = .15, linetype = "dotted", linesize = .2) +   #geom_nodelab(size = 2, nudge_x = -0.003, color="red", nudge_y = 0.2, geom="text")
geom_nodepoint(size = 1, color = newlabel) #+ #, nudge_x = -0.005, nudge_y = -0.3, geom="text")
#  xlim(0, 3)
ptr
ptr3 <- flip(ptr, 67, 64)
# library("RColorBrewer")
colors <- c("#FFFFFF", brewer.pal(n = 6, name = 'Purples')[2:6])
display.brewer.pal(n=5, name='Purples')
#colors <- c("#FFFFFF", "#F6F2FF", "#BE95FF", "#6929C4", "#1C0F30", "#000000")
#lighter
##https://www.color-hex.com/color/6929c4
##darker
colors <- c("#FFFFFF", "#d2beed", "#a57edb", "#6929c4", "#491c89", "#000000")
names(colors) <- c("0", "1", "2", "3", "4", "5")
ptr2 <- gheatmap(p = ptr3, meta.df, color = "black",
width=.18, offset=-0.01, colnames=T, colnames_position = "top",
colnames_offset_y = .25, colnames_offset_x = c(-1/60, 0, 1/60),
colnames_angle = 0, font.size = 3.5) +
scale_fill_manual(values=colors, name = "Found opsins") +  ##name doesn't work , labels = names(colors) just not necessary
theme(legend.position = c(0.1, 0.78), legend.margin = margin(t = 0, unit='cm')) +
xlim(0, 1.4) +
annotate("text", x=0.06, y=36, label = "Found opsins") +
annotate("text", x=0.01, y=20.8, label = intToUtf8(9679), col = "red3") +
annotate("text", x=0.12, y=20, label = "aBayes > 0.7 & \n aLRT > 70%")
ptr2
ptr2 + geom_cladelabel(44, 'Baikal group 2', offset=.9, offset.text=.02, extend = .5,
barsiz=1, color='#0072B2', angle=90, hjust='center', alpha = 1) +
geom_hilight(44, fill = '#0072B2', alpha = .2) +
geom_cladelabel(67, 'Europe', offset=.75, offset.text=.02, extend = .5,
barsiz=1, color='#E69F00', angle=90, hjust='center') +
geom_hilight(67, fill = '#E69F00', alpha = .2) +
geom_cladelabel(64, 'Baikal group 1', offset=.9, offset.text=.02, extend = .5,
barsiz=1, color='#0072B2', angle=90, hjust='center') +
geom_hilight(64, fill = '#0072B2', alpha = .2) +
geom_cladelabel(70, 'Talitridae', offset=.945, offset.text=.02, extend = .5,
barsiz=1, color='#CC79A7', angle=90, hjust='center') +
geom_hilight(70, fill = '#CC79A7', alpha = .2) +
geom_cladelabel(39, 'Gammaridae', offset=1, offset.text=.02, extend = .5,
barsiz=1, color='darkgreen', angle=90, hjust='center')
ggsave("aa_tree.png", width=24, height=18, units="cm")
library(openxlsx)
library(ggbeeswarm)
library(ggpubr)
## Gmfa for the main figure
## read the data
diodsG <- read.delim("data/summary_Gfa_LED.tsv.csv", stringsAsFactors = F)
## Gmfa for the main figure
## read the data
diodsG <- read.delim("data/4.1_summary_Gfa_LED.csv", stringsAsFactors = F)
## Add new variables for the groups (useful for plotting)
diodsG$Experiment <- paste0(diodsG$Photo, "_", diodsG$Light, "_", diodsG$Where)
diodsG$Type <- paste0(diodsG$Light, "_", diodsG$Where, "_", substr(diodsG$Photo, 7, 10))
diodsG$Light <- factor(diodsG$Light, levels = c("K", "B", "G", "Y", "R"))
## Correct for the cases where the light sources was on the right wall of the tank
diodsG[diodsG$Where=="R", "Xm"] <- 60-diodsG[diodsG$Where=="R", "Xm"]
## Compute medians to compare and plot
diodsG.med <- aggregate(formula=Xm~Experiment+Light+Lab.acclimation+Where, data=diodsG, FUN="median")
## Test the significance of the differences
pairwise.wilcox.test(diodsG.med$Xm, diodsG.med$Light)
## And plot
pB <-
ggplot(diodsG.med, aes(x=Light, y=Xm, col=Light)) + expand_limits(y=c(0, 60)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width = .1) +#, aes(shape=Lab.acclimation)) +  or shape=Where
scale_x_discrete(limits = rev(levels(diodsG.med$Light)),
labels = c("R"="Red", "Y"="Yellow", "G"="Green", "B"="Blue", "K"="Control (no light)")) +
geom_hline(yintercept = c(30), linetype = "dotted") +
scale_color_manual(values = c("black", "#00C2F9", "#00D302", "#FFAC38", "#CD022D"), guide=F) +
coord_flip() + ggtitle("Gm. fasciatus") + #ggtitle("E. cyaneus") +
theme_bw(base_size = 14) +
theme(plot.title = element_text(face = "italic", hjust = .5), axis.text = element_text(size = 12)) +
ylab("Distance from the edge / diod") + xlab("Light source") +
geom_text(data = data.frame(x=1:5, y=rep(58, 5), Light = "K"), aes(x=x, y=y),
label = c("*", "**", "*", "*", ""), size = 5, nudge_x = -.1)
pB
## Ecy for the main figure
## The same code as before; added purely for reproducibility
diodsE <- read.delim("data/summary_Ecy_LED.csv", stringsAsFactors = F)
## Ecy for the main figure
## The same code as before; added purely for reproducibility
diodsE <- read.delim("data/4.1_summary_Ecy_LED.csv", stringsAsFactors = F)
## Add new variables for the groups (useful for plotting)
diodsE$Experiment <- paste0(diodsE$Photo, "_", diodsE$Light, "_", diodsE$Where)
diodsE$Type <- paste0(diodsE$Light, "_", diodsE$Where, "_", substr(diodsE$Photo, 7, 10))
diodsE$Light <- factor(diodsE$Light, levels = c("K", "B", "G", "Y", "R"))
## Correct for the cases where the light sources was on the right wall of the tank
diodsE[diodsE$Where=="R", "Xm"] <- 60-diodsE[diodsE$Where=="R", "Xm"]
## Compute medians to compare and plot
diodsE.med <- aggregate(formula=Xm~Experiment+Light+Lab.acclimation+Where, data=diodsE, FUN="median")
## Test the significance of the differences
pairwise.wilcox.test(diodsE.med$Xm, diodsE.med$Light)
## And plot
pA <-
ggplot(diodsE.med, aes(x=Light, y=Xm, col=Light)) + expand_limits(y=c(0, 60)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width = .1) +#, aes(shape=Lab.acclimation)) +  or shape = Where
scale_x_discrete(limits = rev(levels(diodsE.med$Light)),
labels = c("R"="Red", "Y"="Yellow", "G"="Green", "B"="Blue", "K"="Control (no light)")) +
geom_hline(yintercept = c(30), linetype = "dotted") +
scale_color_manual(values = c("black", "#00C2F9", "#00D302", "#FFAC38", "#CD022D"), guide=F) +
coord_flip() + ggtitle("E. cyaneus") + #ggtitle("E. cyaneus") +
theme_bw(base_size = 14) +
theme(plot.title = element_text(face = "italic", hjust = .5), axis.text = element_text(size = 12)) +
ylab("Distance from the edge / diod") + xlab("Light source") +
geom_text(data = data.frame(x=1:5, y=rep(58, 5), Light = "K"), aes(x=x, y=y),
label = c("***", "***", "***", "***", ""), size = 5, nudge_x = -.1)
## Finally save the figure
ggarrange(pA, pB + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) + xlab(""), ncol = 2, widths = c(1, 0.7), labels = c("A", "B"))
### A few more things to know
summary(glm(data=diodsG.med, Xm~Light+Lab.acclimation+Where))
summary(glm(data=diodsE.med, Xm~Light+Lab.acclimation+Where))
